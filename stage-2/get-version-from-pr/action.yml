name: Get version number from release PR
description: Sets the VERSION environment variable
inputs:
  pr-branch-prefix:
    description: Set this to override the default branch name prefix "prepare-"
    required: false
    default: 'prepare-'
# env outputs:
  # VERSION: The version number of the release
runs:
  using: composite
  steps:
    - name: Get version number
      shell: bash
      env:
        PR_BRANCH_PREFIX: ${{ inputs.pr-branch-prefix }}
        HEAD_REF: ${{ github.head_ref }}
      run: |
        VERSION=$( grep -oP "(?<=${PR_BRANCH_PREFIX}).*" <<< "$HEAD_REF" )
        if [[ -z "$VERSION" ]]; then
          echo "::error:: Could not get version name from PR branch name '${HEAD_REF}'"
          echo "Note: PR branch name must begin with '${PR_BRANCH_PREFIX}'"
          exit 1
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Install utils
      shell: bash
      run: python3 -m pip install -q packaging

    - name: Is it a prerelease?
      shell: python
      run: |
        import os
        from packaging import version

        ver = version.Version(os.environ['VERSION'])
        is_pre = str(ver.is_prerelease).lower()

        # Set env var
        with open(os.environ['GITHUB_ENV'], 'a') as f:
            f.write(f'PRERELEASE={is_pre}')
